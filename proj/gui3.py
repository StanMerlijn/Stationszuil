import io
import urllib.request
import urllib
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer
from PIL import Image, ImageTk
from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, StringVar, IntVar, Label
import ttkbootstrap as ttk
from input_text import *
from moderator import *

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH_LP = OUTPUT_PATH / Path(r"/Users/stanmerlijn/PycharmProjects/pythonProject4/proj/assets/frame2")
ASSETS_PATH_PC = OUTPUT_PATH / Path(r"C:\Users\smerl\PycharmProjects\StationsZuil\proj\assets\frame2")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH_LP / Path(path)


def find_value_nested_list(nested_list, value):
    for i, inner_list in enumerate(nested_list):
        if value in inner_list:
            return i


def change_facilities(ov_bike, elevator, toilet, park_and_ride):

    canvas.itemconfig(elevator_image, state="hidden")
    canvas.itemconfig(ov_bike_image, state="hidden")
    canvas.itemconfig(toilet_image, state="hidden")
    canvas.itemconfig(park_and_ride_image, state="hidden")

    if ov_bike:
        canvas.itemconfig(ov_bike_image,  state="normal")

    if elevator:
        canvas.itemconfig(elevator_image, state="normal")

    if toilet:
        canvas.itemconfig(toilet_image, state="normal")

    if park_and_ride:
        canvas.itemconfig(park_and_ride_image, state="normal")


def get_weather_icon(icon, large_icon=False):
    url = f"https://openweathermap.org/img/wn/{icon}.png"
    if large_icon:
        url = f"https://openweathermap.org/img/wn/{icon}@2x.png"

    response = requests.get(url)
    if response.status_code == 200:
        # Read the image content
        image_data = response.content
        # Create a PhotoImage from the image data
        img = Image.open(io.BytesIO(image_data))
        return img


def change_geo_data(list_stations):
    global current_weather_photo
    # global forecast_01_photo
    # global forecast_02_photo
    # global forecast_03_photo
    # global forecast_04_photo
    global forecast_05_photo

    station = current_station.get()
    stations_index = find_value_nested_list(list_stations, station)
    station_data = list_stations[stations_index]

    city_name, country, ov_bike, elevator, toilet, park_and_ride, lat, lon = station_data

    change_facilities(ov_bike, elevator, toilet, park_and_ride)

    temp, weather, wind, icon = get_current_weather(lat, lon)

    label_wind.config(text=f"wind: {wind}m/s")
    label_weather.config(text=f"{weather}")
    label_temp.config(text=f"{temp:.0f} Â°C")

    current_weather_data = get_weather_icon(icon, True)
    current_weather_photo = ImageTk.PhotoImage(current_weather_data)
    canvas.itemconfig(current_weather_image_id, image=current_weather_photo)

    # new_05 = get_weather_icon(icon)
    # forecast_05_photo = ImageTk.PhotoImage(new_05)
    # canvas.itemconfig(forecast_05_image_id, image=forecast_05_photo)
    #
    # new_05 = get_weather_icon(icon)
    # forecast_05_photo = ImageTk.PhotoImage(new_05)
    # canvas.itemconfig(forecast_05_image_id, image=forecast_05_photo)
    #
    # new_05 = get_weather_icon(icon)
    # forecast_05_photo = ImageTk.PhotoImage(new_05)
    # canvas.itemconfig(forecast_05_image_id, image=forecast_05_photo)
    #
    # new_05 = get_weather_icon(icon)
    # forecast_05_photo = ImageTk.PhotoImage(new_05)
    # canvas.itemconfig(forecast_05_image_id, image=forecast_05_photo)

    new_05 = get_weather_icon(icon)
    forecast_05_photo = ImageTk.PhotoImage(new_05)
    canvas.itemconfig(forecast_05_image_id, image=forecast_05_photo)

    label_city.config(text=f"{city_name}, {country}")

    set_city(current_station.get())
    display_latest_messages_station(canvas, 6, cursor, 600, 165)


conn = connect_to_db()
cursor = conn.cursor()

stations_data = get_stations_data(cursor)
stations = [sublist[0] for sublist in stations_data]

window3 = Tk()

window3.geometry("960x540")
window3.configure(bg="#E6E6E9")
style = ttk.Style()
style.load_user_themes("user.json")
style = ttk.Style(theme="nscolors2")


canvas = Canvas(
    window3,
    bg="#E6E6E9",
    height=540,
    width=960,
    bd=0,
    highlightthickness=0,
    relief="ridge"
)

canvas.place(x=0, y=0)

canvas.create_rectangle(
    0.0,
    41.0,
    960.0,
    171.0,
    fill="#FFC917",
    outline="")

canvas.create_rectangle(
    55.0,
    116.0,
    465.0,
    232.0,
    fill="#FFFFFF",
    outline="")

canvas.create_rectangle(
    498.0,
    113.0,
    908.0,
    526.0,
    fill="#FFFFFF",
    outline="")

canvas.create_rectangle(
    55.0,
    252.0,
    465.0,
    526.0,
    fill="#FFFFFF",
    outline="")

canvas.create_rectangle(
    541.0,
    146.0,
    876.0,
    493.0,
    fill="#CDCDD3",
    outline=""
)


canvas.create_text(
    541.0,
    123.0,
    anchor="nw",
    text="messages",
    fill="#003082",
    font=("Open Sans Bold", 11 * -1)
)

label_city = Label(
    anchor="nw",
    text="Arnhem, NL",
    font=("Open Sans Bold", 11 * -1)
)
label_city.place(x=87.0, y=260.0)
label_city.config(fg="#003082", bg="#FFFFFF")

canvas.create_text(
    86.0,
    123.0,
    anchor="nw",
    text="facilities",
    fill="#003082",
    font=("Open Sans Bold", 11 * -1)
)

label_weather = Label(
    anchor="nw",
    text="Heavy rain",
    font=("Open Sans Bold", 11 * -1)
)
label_weather.place(x=87.0, y=435.0)
label_weather.config(fg="#000000", bg="#FFFFFF")


label_temp = Label(
    anchor="nw",
    text="",
    font=("Open Sans Bold", 25 * -1)
)
label_temp.place(x=86.0, y=316.0,)
label_temp.config(fg="#000000", bg="#FFFFFF")

label_wind = Label(
    anchor="nw",
    text="Wind: 4.6m/s gentle breez",
    font=("Open Sans Bold", 9 * -1)
)
label_wind.place(x=87.0, y= 451.0)
label_wind.config(fg="#000000", bg="#FFFFFF")

canvas.create_rectangle(
    0.0,
    0.0,
    960.0,
    45.0,
    fill="#FFFFFF",
    outline=""
)

image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    90.0,
    22.0,
    image=image_image_1
)

label_time = ttk.Label(
    anchor="nw",
    text="",
    foreground="#003082",
    background="#ffffff",
    font=("Open Sans Bold", 12 * -1)
)
label_time.place(x=512.0, y=15.0)

label_date = ttk.Label(
    anchor="nw",
    text="",
    foreground="#003082",
    background="#ffffff",
    font=("Open Sans Bold", 12 * -1)
)
label_date.place(x=420.0, y=15.0)


button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))

current_station = StringVar(value=stations[0])

station_button = ttk.Combobox(
    textvariable=current_station
)
station_button.place(
    x=376.0,
    y=68.0,
    width=199.8000030517578,
    height=25.0
)
station_button["values"] = stations

station_button.bind("<<ComboboxSelected>>", lambda event: change_geo_data(stations_data))

image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
elevator_image = canvas.create_image(
    222.0,
    171.0,
    image=image_image_2,
)

image_image_3 = PhotoImage(
    file=relative_to_assets("image_3.png"))
park_and_ride_image = canvas.create_image(
    156.0,
    171.0,
    image=image_image_3
)

image_image_4 = PhotoImage(
    file=relative_to_assets("image_4.png"))
toilet_image = canvas.create_image(
    354.0,
    171.0,
    image=image_image_4
)

image_image_5 = PhotoImage(
    file=relative_to_assets("image_5.png"))
ov_bike_image = canvas.create_image(
    288.0,
    171.0,
    image=image_image_5
)

# image_image_6 = PhotoImage(
#     file=relative_to_assets("image_6.png"))
# image_6 = canvas.create_image(
#     124.0,
#     389.0,
#     image=image_image_6
# )

current_weather_data = get_weather_icon("10d")
current_weather_photo = ImageTk.PhotoImage(current_weather_data)
current_weather_image_id = canvas.create_image(
    124.0,
    389.0,
    image=current_weather_photo
)

canvas.create_text(
    321.0,
    292.0,
    anchor="nw",
    text="today\n3 nov",
    fill="#070721",
    font=("Open Sans SemiBold", 9 * -1)
)

canvas.create_text(
    400.0,
    296.0,
    anchor="nw",
    text="10 - 5",
    fill="#070721",
    font=("Open Sans SemiBold", 9 * -1)
)

image_image_7 = PhotoImage(
    file=relative_to_assets("image_7.png"))
image_7 = canvas.create_image(
    371.0,
    300.0,
    image=image_image_7
)

image_image_8 = PhotoImage(
    file=relative_to_assets("image_8.png"))
image_8 = canvas.create_image(
    369.0,
    345.0,
    image=image_image_8
)

canvas.create_text(
    321.0,
    336.0,
    anchor="nw",
    text="today\n3 nov",
    fill="#070721",
    font=("Open Sans SemiBold", 9 * -1)
)

canvas.create_text(
    400.0,
    340.0,
    anchor="nw",
    text="10 - 5",
    fill="#070721",
    font=("Open Sans SemiBold", 9 * -1)
)

canvas.create_text(
    321.0,
    382.0,
    anchor="nw",
    text="today\n3 nov",
    fill="#070721",
    font=("Open Sans SemiBold", 9 * -1)
)

image_image_9 = PhotoImage(
    file=relative_to_assets("image_9.png"))
# image_image_9 = get_weather_icon("02d")
image_9 = canvas.create_image(
    369.0,
    390.0,
    image=image_image_9
)

canvas.create_text(
    400.0,
    385.0,
    anchor="nw",
    text="10 - 5",
    fill="#070721",
    font=("Open Sans SemiBold", 9 * -1)
)

image_image_10 = PhotoImage(
    file=relative_to_assets("image_10.png"))
# image_image_10 = get_weather_icon("09d")
image_10 = canvas.create_image(
    369.0,
    435.0,
    image=image_image_10
)

canvas.create_text(
    321.0,
    425.0,
    anchor="nw",
    text="today\n3 nov",
    fill="#070721",
    font=("Open Sans SemiBold", 9 * -1)
)

canvas.create_text(
    400.0,
    430.0,
    anchor="nw",
    text="10 - 5",
    fill="#070721",
    font=("Open Sans SemiBold", 9 * -1)
)

canvas.create_text(
    321.0,
    470.0,
    anchor="nw",
    text="today\n3 nov",
    fill="#070721",
    font=("Open Sans SemiBold", 9 * -1)
)

# image_image_11 = PhotoImage(
#     file=relative_to_assets("image_11.png"))
# image_11 = canvas.create_image(
#     372.0,
#     480.0,
#     image=image_image_11
# )

forecast_05_data = get_weather_icon("10d")
forecast_05_photo = ImageTk.PhotoImage(forecast_05_data)
forecast_05_image_id = canvas.create_image(
    372.0,
    480.0,
    image=forecast_05_photo
)

canvas.create_text(
    400.0,
    475.0,
    anchor="nw",
    text="10 - 5",
    fill="#070721",
    font=("Open Sans SemiBold", 9 * -1)
)

canvas.create_rectangle(
    86.0,
    285.0,
    296.0,
    289.0,
    fill="#FFC917",
    outline="")
window3.bind('<KeyPress-Escape>', lambda event: window3.destroy())

display_clock(label_time, window3, "%H:%M:%S", 1000)
display_date(label_date, window3, "%B %d", 1000)
set_city(current_station.get())
display_latest_messages_station(canvas, 5, cursor, 600, 165) #, current_station.get())

change_geo_data(stations_data)
window3.resizable(False, False)
window3.mainloop()

cursor.close()
conn.close()
