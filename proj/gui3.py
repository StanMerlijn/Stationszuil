
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, StringVar, IntVar, Label
import ttkbootstrap as ttk
from input_text import *
from moderator import *

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH_LP = OUTPUT_PATH / Path(r"/Users/stanmerlijn/PycharmProjects/pythonProject4/proj/assets/frame3")
ASSETS_PATH_PC = OUTPUT_PATH / Path(r"C:\Users\smerl\PycharmProjects\StationsZuil\proj\assets\frame2")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH_PC / Path(path)


def find_value_nested_list(nested_list, value):
    for i, inner_list in enumerate(nested_list):
        if value in inner_list:
            return i


def change_facilities(ov_bike, elevator, toilet, park_and_ride):

    canvas.itemconfig(elevator_image, state="hidden")
    canvas.itemconfig(ov_bike_image, state="hidden")
    canvas.itemconfig(toilet_image, state="hidden")
    canvas.itemconfig(park_and_ride_image, state="hidden")

    if ov_bike:
        canvas.itemconfig(ov_bike_image,  state="normal")

    if elevator:
        canvas.itemconfig(elevator_image, state="normal")

    if toilet:
        canvas.itemconfig(toilet_image, state="normal")

    if park_and_ride:
        canvas.itemconfig(park_and_ride_image, state="normal")


def change_geo_data(list_stations):
    station = current_station.get()

    stations_index = find_value_nested_list(list_stations, station)
    station_data = list_stations[stations_index]
    city_name, country, ov_bike, elevator, toilet, park_and_ride, lat, lon = station_data

    change_facilities(ov_bike, elevator, toilet, park_and_ride)

    weather_data = get_weather_geolocation(lat, lon)

    label_city.config(text=f"{city_name}, {country}")




conn = connect_to_db()
cursor = conn.cursor()

stations_data = get_stations_data(cursor)
for i in stations_data:
    pass
    print(i)
stations = [sublist[0] for sublist in stations_data]
# print(stations_data)
place = "Zutphen"

for i, inner_list in enumerate(stations_data):
    if place in inner_list:
        pass
        print(i)

window3 = Tk()

window3.geometry("960x540")
window3.configure(bg="#E6E6E9")
style = ttk.Style(theme="nscolors2")


canvas = Canvas(
    window3,
    bg = "#E6E6E9",
    height = 540,
    width = 960,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge"
)

canvas.place(x = 0, y = 0)
canvas.create_rectangle(
    0.0,
    41.0,
    960.0,
    171.0,
    fill="#FFC917",
    outline="")

canvas.create_rectangle(
    55.0,
    116.0,
    465.0,
    232.0,
    fill="#FFFFFF",
    outline="")

canvas.create_rectangle(
    498.0,
    113.0,
    908.0,
    526.0,
    fill="#FFFFFF",
    outline="")

canvas.create_rectangle(
    55.0,
    252.0,
    465.0,
    526.0,
    fill="#FFFFFF",
    outline="")

canvas.create_rectangle(
    541.0,
    146.0,
    876.0,
    493.0,
    fill="#CDCDD3",
    outline="")

canvas.create_text(
    564.0,
    167.0,
    anchor="nw",
    text="547AWMdnh\niu3hWwYVHDS6lUZgu\nbrhoE0sjIwa\n"
         "mw1NVZcNwyZqNfwvkwwZ6\nR1y33zGBBI0\nVLaUt\nNpICZRKsim2u6E"
         "uS\n4tGXuygjbKH\nTmhIsgYo\nGkAhzx62pGX\naOJ23KNeZF\nN66o8UlkOE\n",
    fill="#000000",
    font=("OpenSansRoman Regular", 11 * -1)
)

canvas.create_text(
    541.0,
    123.0,
    anchor="nw",
    text="messages",
    fill="#003082",
    font=("Open Sans Bold", 11 * -1)
)

label_city = Label(
    anchor="nw",
    text="Arnhem, NL",
    font=("Open Sans Bold", 11 * -1)
)
label_city.place(x=87.0, y=260.0)
label_city.config(fg="#003082", bg="#FFFFFF")

canvas.create_text(
    86.0,
    123.0,
    anchor="nw",
    text="facilities",
    fill="#003082",
    font=("Open Sans Bold", 11 * -1)
)

canvas.create_text(
    87.0,
    435.0,
    anchor="nw",
    text="Heavy rain",
    fill="#000000",
    font=("Open Sans Bold", 11 * -1)
)

canvas.create_text(
    86.0,
    316.0,
    anchor="nw",
    text="11 C ",
    fill="#000000",
    font=("Open Sans Bold", 25 * -1)
)

canvas.create_text(
    87.0,
    451.0,
    anchor="nw",
    text="Wind: 4.6m/s gentle breez",
    fill="#000000",
    font=("Open Sans Bold", 9 * -1)
)

canvas.create_rectangle(
    0.0,
    0.0,
    960.0,
    45.0,
    fill="#FFFFFF",
    outline="")

image_image_1 = PhotoImage(
    file=relative_to_assets("image_1.png"))
image_1 = canvas.create_image(
    90.0,
    22.0,
    image=image_image_1
)

label_time = ttk.Label(
    anchor="nw",
    text="",
    foreground="#003082",
    background="#ffffff",
    font=("Open Sans Bold", 12 * -1)
)
label_time.place(x=512.0, y=15.0)

label_date = ttk.Label(
    anchor="nw",
    text="",
    foreground="#003082",
    background="#ffffff",
    font=("Open Sans Bold", 12 * -1)
)
label_date.place(x=420.0, y=15.0)


button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))

current_station = StringVar(value=stations[0])

station_button = ttk.Combobox(
    textvariable=current_station
)
station_button.place(
    x=376.0,
    y=68.0,
    width=199.8000030517578,
    height=25.0
)
station_button["values"] = stations

station_button.bind("<<ComboboxSelected>>", lambda event: change_geo_data(stations_data))

image_image_2 = PhotoImage(
    file=relative_to_assets("image_2.png"))
elevator_image = canvas.create_image(
    222.0,
    171.0,
    image=image_image_2,
)

image_image_3 = PhotoImage(
    file=relative_to_assets("image_3.png"))
park_and_ride_image = canvas.create_image(
    156.0,
    171.0,
    image=image_image_3
)

image_image_4 = PhotoImage(
    file=relative_to_assets("image_4.png"))
toilet_image = canvas.create_image(
    354.0,
    171.0,
    image=image_image_4
)

image_image_5 = PhotoImage(
    file=relative_to_assets("image_5.png"))
ov_bike_image = canvas.create_image(
    288.0,
    171.0,
    image=image_image_5
)

image_image_6 = PhotoImage(
    file=relative_to_assets("image_6.png"))
image_6 = canvas.create_image(
    124.0,
    389.0,
    image=image_image_6
)

canvas.create_text(
    321.0,
    292.0,
    anchor="nw",
    text="today\n3 nov",
    fill="#070721",
    font=("Open Sans SemiBold", 9 * -1)
)

canvas.create_text(
    400.0,
    296.0,
    anchor="nw",
    text="10 - 5",
    fill="#070721",
    font=("Open Sans SemiBold", 9 * -1)
)

image_image_7 = PhotoImage(
    file=relative_to_assets("image_7.png"))
image_7 = canvas.create_image(
    371.0,
    300.0,
    image=image_image_7
)

image_image_8 = PhotoImage(
    file=relative_to_assets("image_8.png"))
image_8 = canvas.create_image(
    369.0,
    345.0,
    image=image_image_8
)

canvas.create_text(
    321.0,
    336.0,
    anchor="nw",
    text="today\n3 nov",
    fill="#070721",
    font=("Open Sans SemiBold", 9 * -1)
)

canvas.create_text(
    400.0,
    340.0,
    anchor="nw",
    text="10 - 5",
    fill="#070721",
    font=("Open Sans SemiBold", 9 * -1)
)

canvas.create_text(
    321.0,
    382.0,
    anchor="nw",
    text="today\n3 nov",
    fill="#070721",
    font=("Open Sans SemiBold", 9 * -1)
)

image_image_9 = PhotoImage(
    file=relative_to_assets("image_9.png"))
image_9 = canvas.create_image(
    369.0,
    390.0,
    image=image_image_9
)

canvas.create_text(
    400.0,
    385.0,
    anchor="nw",
    text="10 - 5",
    fill="#070721",
    font=("Open Sans SemiBold", 9 * -1)
)

image_image_10 = PhotoImage(
    file=relative_to_assets("image_10.png"))
image_10 = canvas.create_image(
    369.0,
    435.0,
    image=image_image_10
)

canvas.create_text(
    321.0,
    425.0,
    anchor="nw",
    text="today\n3 nov",
    fill="#070721",
    font=("Open Sans SemiBold", 9 * -1)
)

canvas.create_text(
    400.0,
    430.0,
    anchor="nw",
    text="10 - 5",
    fill="#070721",
    font=("Open Sans SemiBold", 9 * -1)
)

canvas.create_text(
    321.0,
    470.0,
    anchor="nw",
    text="today\n3 nov",
    fill="#070721",
    font=("Open Sans SemiBold", 9 * -1)
)

image_image_11 = PhotoImage(
    file=relative_to_assets("image_11.png"))
image_11 = canvas.create_image(
    372.0,
    480.0,
    image=image_image_11
)

canvas.create_text(
    400.0,
    475.0,
    anchor="nw",
    text="10 - 5",
    fill="#070721",
    font=("Open Sans SemiBold", 9 * -1)
)

canvas.create_rectangle(
    86.0,
    285.0,
    296.0,
    289.0,
    fill="#FFC917",
    outline="")
window3.bind('<KeyPress-Escape>', lambda event: window3.destroy())

display_clock(label_time, window3, "%H:%M:%S", 1000)
display_date(label_date, window3, "%B %d", 1000)
display_latest_messages_station(canvas, 5, cursor, 540, 155)


window3.resizable(False, False)
window3.mainloop()

cursor.close()
conn.close()
